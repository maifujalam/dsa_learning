1. What is terraform?
  Its an infrastructure as code(IaC) tool that lets you define both cloud and on-prem resources in human-readable configuration files.
  This files  you can version, reuse, and share.
  It manages your infrastructure through lifecycle.

2. How terraform works?
   Write(Infrastructure)=>Plan(Monitor changes)=>Apply(Create resources)=>Destroy(Delete resources).

3. Similar tool to terraform?
   Similar tools are:- AWS Cloud Formation,Vagrant

4. What is null resource?
   It implement stardard resource library but does not create any resources.It is mostly coupled with provisioners.

5. What are provisioners?
   Integration of terraform with other tools.Provisioners are:- 1.Local exec 2. remote exec 3. file provisioner 4. Chef 5. Puppet 6. Salt 7.habitat

6. Destroy resource without destroy command?
  terraform apply -destroy

7. Save terraform plan?
   terraform plan -out myplan

8. Auto approve?
   -autoapprove

9. Difference between count and foreach?
10. what is dynamic block and how it works?
11. When an state file of 3c2 instance is deleted,then you apply again? what will happen?
12. Hoe to import resource created outside terraform?
    1. create resource_type resource_name block in main.tf. 2. do terraform import  resource_type.resource_name resource_unique id (from terraform docs) (check
    import is successfuly in terminal) 3. Add resource mandetroy fields (matching actual resource). 4. terraform plan until no changes required.(and accepet
    inplace update for minor changes). 5. Make sure when apply taht you dont destroy and recreate resource.
13. Import resource when in module.
14. What are the files present in root module and child modules?
    child module:- main.tf, variables.tf,outputs.tf, README.md,datasource.tf,                ,            ,
    root module:-  main.tf, variables.tf,outputs.tf, README.md,             ,terraform.tfvars, provider.tf,  versions.tf
15. How to destroy only a single reource out of multiple reources in main.tf?
    comment the resource and do terraform apply.
16.