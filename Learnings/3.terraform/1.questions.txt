1. What is terraform?
  Its an infrastructure as code(IaC) tool that lets you define both cloud and on-prem resources in human-readable configuration files.
  This files  you can version, reuse, and share.
  It manages your infrastructure through lifecycle.

2. How terraform works?
   Write(Infrastructure)=>Plan(Monitor changes)=>Apply(Create resources)=>Destroy(Delete resources).

3. Similar tool to terraform?
   Similar tools are:- AWS Cloud Formation,Vagrant,Cloud Deployment Manager(GCP)

4. What is null resource?
   It implement stardard resource library but does not create any resources.It is mostly coupled with provisioners.

5. What are provisioners?
   Integration of terraform with other tools.Provisioners are:- 1.Local exec 2. remote exec 3. file provisioner 4. Chef 5. Puppet 6. Salt 7.habitat

6. Destroy resource without destroy command?
  terraform apply -destroy

7. Save terraform plan?
   terraform plan -out myplan

8. Auto approve?
   -autoapprove

9. Difference between count and foreach?
    count:- take number of instance.If list order changes then everything is re created.Adding new item result all recreation.Adding/Removing
              item anywhere in list does trigger resource recreation.
    foreach:- take number of instance using length function.Only creates the added item from list.Adding/Removing item anywhere in list does not trigger
              resource recreation.Only the changed resource from list is updated.

10. what is dynamic block and how it works?
    It uses list,map,set datasets with for_each . Then it iterates over mentioned datasets (of map,list,sets) and assigned complex value(with dynamic block name)  to arguments.
    We can also use lookup(dynamic_block_name.value,"key_to_look",default_value) inside dynamic block.It iterates on key and value accessed inside dynamic_name.value.
    It have content block inside dynamic block.
      dynamic "ingress" {
         for_each = local.ports
          content {
            from_port = ingress.value
            to_port = ingress.value
            protocol = "tcp"
            cidr_blocks = ["0.0.0.0/0"]
            }
            }

11. When an state file of ec2 instance is deleted,then you apply again? what will happen?
    It will recreate as it supports multiple same instance name.But if its does only supportsglobal instance name then it will throw error with resource exist.
12. Hoe to import resource created outside terraform?
    1. create resource_type resource_name block in main.tf. 2. do terraform import  resource_type.resource_name resource_unique id (from terraform docs) (check
    import is successfuly in terminal) 3. Add resource mandetroy fields (matching actual resource). 4. terraform plan until no changes required.(and accepet
    inplace update for minor changes). 5. Make sure when apply taht you dont destroy and recreate resource.

13. Import resource when in module,count,for_each.
    module:- terraform import module.module_name.resource_type.resource_name resource_unique_identifier.
    count:-  terraform import 'resource_type.resource_name[0]' resource-identifier
    for_each:- terraform_import 'resource_type.resource_name['resource_key']' resource-identifier.

14. What are the files present in root module and child modules?
    child module:- main.tf, variables.tf,outputs.tf, README.md,datasource.tf,                ,            ,
    root module:-  main.tf, variables.tf,outputs.tf, README.md,             ,terraform.tfvars, provider.tf,  versions.tf
15. How to destroy only a single reource out of multiple reources in main.tf?
    comment the resource and do terraform apply.
16. Copy file to ec2 in /opt/any_file localtion.
17.