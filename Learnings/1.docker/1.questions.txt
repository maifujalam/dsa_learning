1. build docker image.
    a. docker build -t abc .
2. change port of a running container?
    a.stop the container b. commit the container(docker commit cont_id image:tag) c. start the container with port attached .
    Because only start and create have option to pass -p as port.
3. Copy file to container.OR copy file from container to host.
    a. docker cp src dest.Ex:- docker cp abc container_id:/,docker cp container_id:/ .
4. Can we build docker image from different docker file location?
    a. yes,it can be build using -f flag end with '.' .Ex:- docker build -t abc -f /path/to/any_docker_file_name .
5. Can docker container run when daemon crashes.
    1. yes,if live restore is enabled only.It helps in docker update.Edit /etc/docker/daemon.json.Then add {
                                                                                                           "live-restore": true
                                                                                                           }
6. Difference between command and entrypoint.
    Entrypoint is for running executable(binary,shell script,python3 script) of the container.
    CMD is for passing default parameters of the mentioned entrypoint.It uses default shell.
    CMD:  It tells the default command/and or paramter for containaer executable.When executable is static.
      ex:- CMD echo hello => run container_image =>echo hello | run container_image host =>echo host_id
    ENTRYPOINT:- It tells the specific executable for container.When executable and params are static.
         ex:- ENT.. echo hello => run container_image => hello, run container_image host => hello host_id.
    Bith CMD and ENT..=> ENTRYPOINT ["echo","hello"] CMD ["world"].(If run with no paramter it will print hello world).
        If run with paramter[run container_id alam] => It will print hello alam.
        Entrypoint can be used to use non default shell.(bash,sh,zsh).

7. What is EXPOSE is docker file.
    It's for documentation,as it does not actually exposes any port in reality.

8. Docker mount?
   docker run -d \
     --name=nginxtest \
     --mount source=nginx-vol,destination=/usr/share/nginx/html,readonly \
     nginx:latest

9. What is docker compose?
    its a yaml file which describle docker services,volumes,networks to spin up whole stack of applicatoion at once.
10. What is difference between docker-compose v2 and v3?
    v3 supports docker-swam.I have use v 3.9.
11. Docker default port?
    2375 (un-encrypted),2376 (encrypted)
12. Docker engine architecture?
    Docker-cli(can be on different host) -> docker-api -> docker daemon

13. can we run docker from different host?
    yes.with command, docker -H docker_daemon_address:2375 ps.

14. What is docker namespace?
    It isolates between host workspace with network,mount,process id,unix time sharing,etc.

16. how to Mount created volume?
    -v parameter.

17. if you dont crete volume and do docker run <non_created_volume>:/tmp ,then will docker create volume for you?
    yes.

18. how to mount host path with docker path(volume mount vs bind mount)?
    docker run -v /var/lib/sql:/var/lib/sql mysql .This is called bind mount.
    docker run -v :/path/to/container  .Creates volume with random name.

19. differene between --volume vs --mount?
    1. --volume : stores file at /var/lib/docker/volumes/.Can be used as docker create volume.Three fields name_of_volume:path_to_container_to_mount:read_only_(ro)
    2. --mount : stores file at anywhere at host file system.Present from early stage.If file or path does not exist, then docker creats it.
                It conatains multiple key value pairs:- type=(bind,volumen,tmpfs),src=(/path/of/mount/|_volume_name_),dest|target=/path/to/container,read_only_(ro).
    3. --tempfs: stores data in memory.

20. What is docker mount?
  docker run --mount type=bind,source=/data/myswl,dest=/data/mysql,readonly .Other types are:- volume,bind,tempfs.

21. what is tempfs mount type?
   It creates temprary file system in container memory.Only exists in the lifespan of container. docker run --mount type=tmpfs,dest=/tmp

22. What are the different types of docker networks?
    bridge(default),host,overlay,none,iplan,macvlan
    bridge:- default.Application run in standalone containers thet communicate with each other.
    host:- uses host networking namespace.Uses host port.
    overlay: used in docker swam to connect multiple docker daemon.
    ipvlan: Provides VLAN give ipv4 and ipv6 addressing.
    macvlan: Leagacy app or any app which required MAC id to operate.
    none: If you want to diabl networking on container stack.Only loopback Interface is created.

23. how to use docker host network.
    docker run  --network=host -name=abc nginx

24. create a network.
    docker network create --driver=bridge --subnet=<cidr> my_network

25. How to inspect container network?
  docker inspect container_id.

26. What is docker dns server?
    docker resolves ip of a container through container name.Docker does it through dns server running on address 127.0.0.11.

27. what is the difference between docker run and docker create?
    create: Creates the container bust doesnt start it.Same as run but doesnt start the container.Shares ssame parameters as run.
    run: Creates and starts the container.

28. Multy stage build ?
  FROM any_image:tag abc as base_image
  FROM light_image:tag
  COPY --from=0 /app/app /app

29. How to screat base image?
   FROM scratch
   ADD hello
   CMD ['hello']

30. How to build without using cache?
   docker build -t ss . --no-cache=true

31. What is docker build kit?
     It is an enhanced build process,by improving performance,storage management,security.It have mount secret feature.
     It can be enabled throuh.In /etc/daemon.json { "features": { "buildkit": true } } . Or with environment variable export DOCKER_BUILDKIT=1

32. Attach a detached container:-
    docker attach container_id

37. Where docker daemon configuration stores?
    /etc/docker/daemon.json

33. What is docker socket?
   /var/run/docker.sock

36. Where container stores the log?
    /var/log/containers/container_name_id.log

15. Where docker store its volume?
    /var/lib/docker/volumes/<volume_name>

34. How to freeze docker conatner?
   docker pause container_id.
   docker unpause container_id

35. What are docker restart policy?
    --restart:
    no: never automatically restart the container.(default)
    on-failure: restart it,if failed due to any error,i.e fiailed with non-zero exit code.
    always: Always restart if stopped. If manually stped,it restarts only when:- 1.manualy restarted or 2. demon restarted
    unless-stopped: Similar to always.Difference is,it does not restarts after demon is restarted.

    Rules:- A restart policy only apllyed after container started successfuly for 10 seconds.
            If manually stoped a container then,its restart policy is ignored.Until demon is restart or container is restart.



36. Docker file example: https://github.com/komljen/dockerfile-examples
37. How to check the docker file commands of the docker image?
    docker history docker_imae --no-trunc
38. How to copy multiple files in DOckerfile?
    copy file1 file2 ./
39. Different docker container states:- docker inspect container | grep state
    a. created : wn we run docker create.
    b. running: when do run docker or start docker .
    c. restarted: Wnen container restart policy make to exited contaner restart.
40. How to check last 5 lines of docker pod logs with follow?
    docker logs -l 5 -f cont_id
41. What happen to container logs/files when its restarted?
    logs:- Logs are remain but will append to new file.But previous logs are append to new logs.
    file: presist
42. What happen to container logs/files when its recreated?
    logs: deleted
    files:
43. Add unqualified registries: /etc/containers/registries.conf
    unqualified-search-registries = ["registry.fedoraproject.org", "registry.access.redhat.com", "quay.io", "registry.redhat.io", "docker.io"]

44. Docker ADD vs Docker COPY Commands?
    COPY:-
    1.Its simply used for copying files.
    2.It copies file from build context,or from multi stage build.
    3. You have to use wget,tar command to fulfill requirement.And requires its binary.
    4. It requires checksum validation.
    5. File are present in each stape of build and present in final image.
    ADD:-
    1. Its used for downloading file from webserver,git,or tar file auto extraction from build context.
    2. It have inbuild feature of wget and tar.And it does not requires its binary.
    3. Inbuild checksum vaidation.(Need to pass checksum value in --checksum parameter).
    4. File are cached and only available during the build and does not persist in the final image.
