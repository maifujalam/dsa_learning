1. How to get cluster domain name?
   a. ssh into any pod ( ex.nginx pod deployed in default ns)
   b. k -n kube-system exec -it nginx-deployment-845d4d9dff-dn7q2 sh
   c. cat /etc/resolv.conf
   d. nameserver 10.96.0.10
      search default.svc.cluster.local svc.cluster.local cluster.local
      options ndots:5
   e. domain name is: cluster.local

   OR
   a. cat /var/lib/kubelet/config.yaml

2. Difference between rc and rs?
    RC=>
    0.its predecessor, only used to creat replicas.
    1. Its have equality based selector,i.e; pass key:value for sector.(don't add matchLabels)
    2. It doesn't include existing matched label selector in replica count of itself.
    3. It is not created by deployment.

    RS=>
    0. it is advance then rc.
    1. It have set based selector,i.e matchLabels and matchExpressions.
    2. Include existing pods in count if label sector matches.
    3. it is created by deployment.

3. Delete repica set without deleting pods.
   k delete rs nginx-rs --cascade=orphan

4. Show logs of all containers in pods with timestamp.
    k logs -f network-debug-8j5x6 --all-containers --timestamps=true

5. What happens in background when we run kubectl command?
    1.loads kubeconfig for cluster authentication.(precedence => cli flag(--kubeconfig),environment variable(KUBECONFIG),path (~/.kube/config)
    2. goes to api server (with loaded client certificate)
    3. API server matches CNAME and then ready to validate ertificate.
    4. after authonticated ,it authorizes
    5. go to etcd cluster to get cluster data
    6. return
6. connect pods in different namespace?
    using service name.example.=> service.namespace

7. kubernetes all ports:-
    api-server: 6443
    kubelet- 10248
    kube-proxy- 10249
    kube-controller: 10257
    kube-scheduler:- 10259
    etcd:- 2379-2380

8. Different types of k8s services.
    a. clusterIP: default,Exposes the Service on a cluster-internal IP.Only resolve within cluster.
    b. Node port: range-30,000-32,767.Accessable from outside of cluster,with <node-ip>:<node-port>.CLuster ip is also created.
    c. Load Balancer:- depends upon cloud provider.Node port and cluster ip is also created.
    e. External:- Forward the traffic to the externalName value set as CNAME record. like:- prod cluster.(ex;- service_of_other_custer.namespace.sec.cluster.local2)

9. What is the default image pull policy of deployment?
   Always:- so it always pull image.But if that image is still present in machine,then also it run docker pull at backend.But if image name with tag is present
   then it will IfNotPresent.

10. What is ingress?
    It a way to expose HTTP/HTTPS traffic to outside of cluster.It forward traffic to clusterIP.It have host based and path based routing.

11. What is host based and path routing?
    Routes the traffic to different hosts based on the host prefix:- app1.example.com,app2.example.com
    Routes trrafic according to path:- example:- example.com/app1,example.com/app2.

12. Can we implement ingress by creating Ingress object only?
    No,It needs ingress controller.Most famous is nginx-ingress controller.

13. Difference between kubeproxy and kubectl proxy?
    kubeproxy:- it purpose is to maintain route table on each node for pod network connectivity.
                It programs linux kernel for routing traffic to pod underlying service.
    kubectl proxy:- its creates a proxy tunnel between k8s cluster and the host running k8s.Alternative to LB.

14. What is headless service?How it works?
    Service with clusterIP: None .hare cluster ip is not allocated to service.You can use any other service discovery mechanism(eBGP by calico).
    Kubeproxy-does not handle this traffic.It is of two types:- with selectors,without selectors.

    With Sectors:-
    It works by skipping proxy(i.e service discovery) and directly connecting to one of pods endpoint.
    Example:- nslookup normal-service => returns service ip (10.96.0.10),i.e A record
               nslookup headless-service = > retuens one po pods ip ( 192.168.6.20)

    Without Selector:-
    It returns CNAME record with External type service.

15. What is network policy?
    It acts as a firewall of pods.It is a set of allow/block rules which controlls the traafic flow in/out of pods.

15. What is traffic policy in service?
    It tell how the traffic will be managed for incoming or outgoing by kubeproxy .Basically how the endpoints will be selected.It can be of two types:-external,internal.

16. What is service external traffic policy?
    Ref:- https://www.asykim.com/blog/deep-dive-into-kubernetes-external-traffic-policies
    a. externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints.Only works with LB nad N service type.
    b. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and NodePort type services, but risks potentially imbalanced traffic spreading.
    c. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.(default)
    d. "Local" can create black hole as LB distributes traffic equally to all nodes.

16.1 What is internal traffic policy?
   1. It tells how where to forward traffic which generated from a pod in a node. policy can be local ("node local") or cluster ("cluster wide").
   2. If its local:- traffic will not forward to other nodes.So,it tells kube proxy to only forwards traffic to endpoints(pods endpoint) of this node.
   3. If its clusteR:- trafic will be forwared to other nodes too.So,it tells autoproxy to foreard trafic to all endpoints(same node and other nodes).

16.5. BGP on Cloud?
    https://www.asykim.com/blog/kubernetes-traffic-engineering-with-bgp

17. how tls works in ingress?
   tls block in ingress, contains host and secret name.Host should be valid as certificate CN.Secret should be consists of tls.crt and tls.key with base64 encoded values.
   It basically tells ingress controller to pass the traffic from client to load balancer in https on port 443.

18. what are probs in k8s?
    Startup Probs:
    Liveliness:
    ReadiNess:

19. What is terminationGracePeriodSeconds?
    After a delete command is passed to pod.k8s send a SIGTERM signal to all containers in pod.This tells all the containers in the pod that they are going to
    be shut down soon.So they finish up the remaining tasks like:- finish up any data storing,process any ongoing request,close any network connection.
    So,this duration of time provided is called terminationGracePeriodSeconds.Its default to 30 seconds.

20.  Why use k8s ingress?
     Expose multiple http/https application.If used nodeport difficult to remeber.

21. K8s vs Openshift?
     k8s=> Its a openshource project   OCP=> product by redhat.
     k8s=> no market place          OCP=>have market place
     k8s=> no dashboard inbuild.    OCp=> dashboard inbuild
     k8s=> no monitoring inbuild.    OCP=> monitoring inbuild like:- metric server.
     k8s=> leass support from community. OCp=> high support from purchase plans.
     k8s=> no inbuild image registry     OCp=> have image registry
     Deployment:- manual                 Deployent: s2i
     k8s=> Less secure,image pull.Running priviledge containers    ocp=>stroong security constrains.Cannot run container as root.

22. What is node afinity?
    Advance pod scheduling to node.It has more customization on labels and selectors.Two types of nodeafinity:-
    1. requiredDuringSchedulingIgnoredDuringExecution:- strict
    2. preferredDuringSchedulingIgnoredDuringExecution:- guarenteed.
      Example:-
      nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/memory
                  operator: In
                  values:
                  - high
                  - medium
    ---
23. Types of node sector for pod?
    1. NodeName: worker1 ( exact node name)
    2. NodeSelctor:  (any node having label memory=large)
          memory: large
    3. NodeAfinity: affinity:
                        nodeAffinity:
                          requiredDuringSchedulingIgnoredDuringExecution:
                            nodeSelectorTerms:
                            - matchExpressions:
                              - key: kubernetes.io/e2e-az-name
                                operator: In
                                values:
                                - e2e-az1
    ---

    4. AntiAfninity: same as Afinity but use NotIN (In operator)

22. What are available affinity operators?
    In, NotIn, Exists, DoesNotExist

23. How to prevent pod to be scheduled on the same node if it already present?
    Using Pod Afinity and Anti afinity.Same as node afinity.With the help of topology key and labels on pod.
    It checks the label present on pods rather than label on nodes.
    It checks the label that is topologyKey: topologyKey: zone  (topology key can be zone,rack,region,etc).
    Mandetory:-every node in the cluster must have an appropriate label matching topologyKey.If its not done it may be unscheduled.
    The topologyKey can be any legal label-key.
    If omitted or empty, it defaults to the namespace of the pod where the affinity/anti-affinity definition appears.
    Example:-
       affinity:
         podAffinity:
           requiredDuringSchedulingIgnoredDuringExecution:
           - labelSelector:
               matchExpressions:
               - key: security
                 operator: In
                 values:
                 - S1
             topologyKey: topology.kubernetes.io/zone
    ---

24. what is pause container?
    Each k8s pod is created along with pause container.It has below features:-
    a. It holds networking ,process namespace for pod.
    b. It bootstrap for container inside pods.
    c. It shares volumes for all container inside.
    d. Assign ip address to all containers inside.
    e. If pause container dies,k8s consider pod dead,and recreates it.

25. What are init containers?
    Containers which are run before the app conainers are created.It has below features:-
    a. There can be multiple init containers,i.e 1 or more.Run in serial order.
    b. They always run to complete.
    c. Each container must complete before next one starts.
    d. If init container fails=> 1. k8s repeatedly restarts init container until it succeeds or completes.
                                 2. It pod have restart policy Never:- k8s treat overall pod is dead.
    e. This is created wit initContainers:
                           - name: dd
                             image: ccc
                             command: ["cc"]

26. What is PDP (Pod Disruption Budget)?
    It ensures high availability of application.It limits the number of maximum pods of RS are down at a time.

27. Service without selector?

    Service abstrat backend running k8s pod.But they can abstract other kind of backends like;-
    i. Service from other cluster Ex:- 123.456.789
    ii. Migrating to kubernetes.Ex:- database is not migrated to k8s.(So database end point ).
    So,all this services does not creates endpoint.You need to create endpoint according to the name of servcice.

28. Forward trrafic to another clutser?

29. What is trrafic policy?
    https://kubernetes.io/docs/concepts/services-networking/service/#traffic-policies

30. How to create new user for k8s access?
    1. Create a new private key for user.
        a. openssl genrsa -out new_user.key 4048
    2. Creata CSR for that user.
        a. Without group: openssl req -new -key new_user.key -out new_user.csr -subj="/CN=new_user"
        b. User with grou: openssl req -new -key new_user.key -out new_user.csr -subj="/CN=new_user/O=developer"
    3. Sign csr with k8s CA and generate clinet certificate.
        a. openssl x509 -rew -in new_user.csr -CA /etc/kubernetes/pki/ca.crt -CAKey /et/kubernetes/ca.key -CAcreateserial -out new_user.crt
    4. Add config to kubeconfig:
        a. kubectl config set credential new_user --client-certificate=new_user.crt --client-key=new_user.key
    5. Change context:
        a. kubectl config set context --cluster=cluster1 --user=new_user --namespace=default

31. How to check certificate expiraton in k8s?
    kubeadm certs check-expiration

32. How to give new user authorization?
    Create role: kubectl create role foo --verb=get,list,watch --resource=pods,pods/status
    clusterrole: kubectl create clusterrole foo --verb=get,list,watch --resource=pods,pods/status
    rolebinding:  kubectl create rolebinding role_binding_name --role=admin --user=user1

33.Verify authentication and authorization?
   kubectl auth can-i get,list pod -as new_user

34.








